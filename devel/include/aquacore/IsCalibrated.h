// Generated by gencpp from file aquacore/IsCalibrated.msg
// DO NOT EDIT!


#ifndef AQUACORE_MESSAGE_ISCALIBRATED_H
#define AQUACORE_MESSAGE_ISCALIBRATED_H

#include <ros/service_traits.h>


#include <aquacore/IsCalibratedRequest.h>
#include <aquacore/IsCalibratedResponse.h>


namespace aquacore
{

struct IsCalibrated
{

typedef IsCalibratedRequest Request;
typedef IsCalibratedResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct IsCalibrated
} // namespace aquacore


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::aquacore::IsCalibrated > {
  static const char* value()
  {
    return "e431d687bf4b2c65fbd94b12ae0cb5d9";
  }

  static const char* value(const ::aquacore::IsCalibrated&) { return value(); }
};

template<>
struct DataType< ::aquacore::IsCalibrated > {
  static const char* value()
  {
    return "aquacore/IsCalibrated";
  }

  static const char* value(const ::aquacore::IsCalibrated&) { return value(); }
};


// service_traits::MD5Sum< ::aquacore::IsCalibratedRequest> should match 
// service_traits::MD5Sum< ::aquacore::IsCalibrated > 
template<>
struct MD5Sum< ::aquacore::IsCalibratedRequest>
{
  static const char* value()
  {
    return MD5Sum< ::aquacore::IsCalibrated >::value();
  }
  static const char* value(const ::aquacore::IsCalibratedRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::aquacore::IsCalibratedRequest> should match 
// service_traits::DataType< ::aquacore::IsCalibrated > 
template<>
struct DataType< ::aquacore::IsCalibratedRequest>
{
  static const char* value()
  {
    return DataType< ::aquacore::IsCalibrated >::value();
  }
  static const char* value(const ::aquacore::IsCalibratedRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::aquacore::IsCalibratedResponse> should match 
// service_traits::MD5Sum< ::aquacore::IsCalibrated > 
template<>
struct MD5Sum< ::aquacore::IsCalibratedResponse>
{
  static const char* value()
  {
    return MD5Sum< ::aquacore::IsCalibrated >::value();
  }
  static const char* value(const ::aquacore::IsCalibratedResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::aquacore::IsCalibratedResponse> should match 
// service_traits::DataType< ::aquacore::IsCalibrated > 
template<>
struct DataType< ::aquacore::IsCalibratedResponse>
{
  static const char* value()
  {
    return DataType< ::aquacore::IsCalibrated >::value();
  }
  static const char* value(const ::aquacore::IsCalibratedResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AQUACORE_MESSAGE_ISCALIBRATED_H
